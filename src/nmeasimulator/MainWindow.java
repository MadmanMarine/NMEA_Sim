/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nmeasimulator;

import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.InetAddress;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ButtonGroup;
import mad.validation.ValidationStatus;

/**
 *
 * @author Neil F.
 */
public class MainWindow extends javax.swing.JFrame implements ValidationStatus {

    static public String ActiveNetName = null;
    static public InetAddress ActivePcIpAddress;
    static public String ActiveNetDisplayName = null;
    static public String SendCommand = null;
    static public String WiFlyRxData = null;
    static public String WiFlyRawRxData = null;
    public static boolean WiFiConnectionFound = false;
    String WiFlyPassword = null;
    String WiFlyIpAddress = null;
    String WiFlyLocalPort = null;
    String WiflySsid = null;
    String WiFlyChannel = null;
    public static String WiFlyConnectIp = null;
    public static String WiFlyConnectPort = null;
    public static boolean MonitorMode;
    public static boolean UseUDP;
    public static boolean StartTcpThread;
    public int WriteSuccess = 0;
    public static boolean WiFlyConnected;
    public String CurrentTextField;
    public static boolean WiFlyCommandMode;
    public String WiFlyRxMessage;
    private String CmdModeString = "";
    public static boolean startData;
    public Thread t;
    public static boolean PassageStarted;
    public static double globLat, globLon;
    public static int globHeading,globSpeed;
    public static String globNS, globEW, globLatString, globLonString;
    public static float globAccuracy;
    
            //Communicator object
    Communicator communicator = null;
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {

        initComponents();
        initValues();
        setIcon();
        this.setLocationRelativeTo(null); //centre the window on opening
        createObjects();
        communicator.searchForPorts();
       
    }
    private void createObjects()
    {
        communicator = new Communicator(this);
    }
    private void initValues(){
        globSpeed = Integer.parseInt(jTxtField_Speed.getText());
        jLabel10.setText(Float.toString(globSpeed));
        jSlider1.setValue(globSpeed);
        globHeading = Integer.parseInt(jTxtField_Heading.getText());
        jLabel11.setText(Float.toString(globHeading) + "\u00b0");
    }

    private void groupDataButtons(){
        ButtonGroup groupDataButtons = new ButtonGroup();
        groupDataButtons.add(jBtn_DataStart);
        groupDataButtons.add(jBtn_DataPause);
        groupDataButtons.add(jBtn_DataStop);  
    }   
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea1 = new java.awt.TextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel_MainWindow = new javax.swing.JPanel();
        jPanel_Heading = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPanel_Settings = new javax.swing.JTabbedPane();
        jPanel_SettingsTab = new javax.swing.JPanel();
        txtLog = new java.awt.TextArea();
        jPanel_SerialConnect = new javax.swing.JPanel();
        jButton_Connect = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton_Disconnect = new javax.swing.JButton();
        cboxPorts = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel_Shortcuts = new javax.swing.JPanel();
        jPanel_iSteerSettings = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTxtField_Heading = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTxtField_Speed = new javax.swing.JTextField();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        checkbox_TrueMag = new java.awt.Checkbox();
        jSlider1 = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        label4 = new java.awt.Label();
        jLabel11 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_StartLat = new javax.swing.JTextField();
        checkbox_NorthSouth = new java.awt.Checkbox();
        jLabel9 = new javax.swing.JLabel();
        jTextField_StartLon = new javax.swing.JTextField();
        checkbox_EastWest = new java.awt.Checkbox();
        jLabel5 = new javax.swing.JLabel();
        jTxtField_Accuracy = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton_Clear = new javax.swing.JButton();
        jPanel_WiFlyCommand = new javax.swing.JPanel();
        jBtn_DataStop = new javax.swing.JButton();
        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCommand = new java.awt.TextField();
        jBtn_DataStart = new javax.swing.JButton();
        jBtn_DataPause = new javax.swing.JButton();
        jPanel_HelpTab = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel_MadmanLogo = new javax.swing.JLabel();
        jLabel_Version = new javax.swing.JLabel();
        javax.swing.JButton jButton_Close = new javax.swing.JButton();
        jLabel_MadmanWebAddress = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setMaximumSize(new java.awt.Dimension(2000, 2000));
        setMinimumSize(new java.awt.Dimension(1200, 1200));
        setPreferredSize(new java.awt.Dimension(1295, 1410));
        setResizable(false);
        getContentPane().setLayout(new java.awt.BorderLayout(10, 0));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(300, 300));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1000, 1000));

        jPanel_MainWindow.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel_MainWindow.setMaximumSize(new java.awt.Dimension(800, 620));
        jPanel_MainWindow.setName(""); // NOI18N
        jPanel_MainWindow.setOpaque(false);
        jPanel_MainWindow.setPreferredSize(new java.awt.Dimension(800, 620));
        jPanel_MainWindow.setLayout(null);

        jPanel_Heading.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel_Heading.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel_Heading.setPreferredSize(new java.awt.Dimension(660, 100));

        jLabel48.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("MADMAN MARINE PTY LTD.");
        jLabel48.setToolTipText("");
        jLabel48.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel48.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("SERIAL NMEA DATA UTILITY");
        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel58.setFont(new java.awt.Font("Cavalero BT", 1, 36)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 51, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel58.setText("NMEA Simulator");
        jLabel58.setToolTipText("");
        jLabel58.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel_HeadingLayout = new javax.swing.GroupLayout(jPanel_Heading);
        jPanel_Heading.setLayout(jPanel_HeadingLayout);
        jPanel_HeadingLayout.setHorizontalGroup(
            jPanel_HeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HeadingLayout.createSequentialGroup()
                .addGroup(jPanel_HeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_HeadingLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_HeadingLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel_HeadingLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel_HeadingLayout.setVerticalGroup(
            jPanel_HeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HeadingLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 150, Short.MAX_VALUE))
            .addGroup(jPanel_HeadingLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_MainWindow.add(jPanel_Heading);
        jPanel_Heading.setBounds(10, 0, 670, 140);

        jTabbedPanel_Settings.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTabbedPanel_Settings.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jTabbedPanel_Settings.setMinimumSize(new java.awt.Dimension(300, 300));
        jTabbedPanel_Settings.setPreferredSize(getPreferredSize());

        jPanel_SettingsTab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel_SettingsTab.setPreferredSize(new java.awt.Dimension(440, 600));
        jPanel_SettingsTab.setRequestFocusEnabled(false);
        jPanel_SettingsTab.setLayout(null);

        txtLog.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jPanel_SettingsTab.add(txtLog);
        txtLog.setBounds(10, 650, 1260, 530);

        jPanel_SerialConnect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_SerialConnect.setAutoscrolls(true);
        jPanel_SerialConnect.setLayout(null);

        jButton_Connect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_Connect.setText("Connect");
        jButton_Connect.setToolTipText("");
        jButton_Connect.setFocusCycleRoot(true);
        jButton_Connect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Connect.setInheritsPopupMenu(true);
        jButton_Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConnectActionPerformed(evt);
            }
        });
        jPanel_SerialConnect.add(jButton_Connect);
        jButton_Connect.setBounds(320, 60, 180, 40);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Serial Port Settings");
        jLabel20.setToolTipText("");
        jPanel_SerialConnect.add(jLabel20);
        jLabel20.setBounds(10, 0, 240, 23);

        cboxBaud.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboxBaud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9600", "38400", "4800", "115200" }));
        cboxBaud.setToolTipText("");
        cboxBaud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxBaudActionPerformed(evt);
            }
        });
        jPanel_SerialConnect.add(cboxBaud);
        cboxBaud.setBounds(104, 150, 90, 40);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel31.setText("Comm Port");
        jLabel31.setToolTipText("");
        jLabel31.setOpaque(true);
        jPanel_SerialConnect.add(jLabel31);
        jLabel31.setBounds(320, 120, 120, 20);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Baud Rate");
        jLabel15.setToolTipText("");
        jLabel15.setMaximumSize(new java.awt.Dimension(94, 14));
        jLabel15.setMinimumSize(new java.awt.Dimension(94, 14));
        jLabel15.setName(""); // NOI18N
        jLabel15.setOpaque(true);
        jLabel15.setPreferredSize(new java.awt.Dimension(94, 14));
        jPanel_SerialConnect.add(jLabel15);
        jLabel15.setBounds(70, 120, 110, 20);

        jButton_Disconnect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_Disconnect.setText("Disconnect");
        jButton_Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DisconnectActionPerformed(evt);
            }
        });
        jPanel_SerialConnect.add(jButton_Disconnect);
        jButton_Disconnect.setBounds(60, 60, 170, 40);

        cboxPorts.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboxPorts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Select Comm Port)" }));
        jPanel_SerialConnect.add(cboxPorts);
        cboxPorts.setBounds(320, 150, 180, 40);

        jPanel_SettingsTab.add(jPanel_SerialConnect);
        jPanel_SerialConnect.setBounds(10, 10, 590, 300);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Monitor");
        jLabel3.setToolTipText("");
        jPanel_SettingsTab.add(jLabel3);
        jLabel3.setBounds(10, 620, 140, 22);

        jPanel_Shortcuts.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_Shortcuts.setAutoscrolls(true);
        jPanel_Shortcuts.setLayout(null);

        jPanel_iSteerSettings.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_iSteerSettings.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Heading & Speed");
        jPanel_iSteerSettings.add(jLabel2);
        jLabel2.setBounds(10, 10, 200, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Heading");
        jLabel14.setToolTipText("");
        jLabel14.setVerifyInputWhenFocusTarget(false);
        jPanel_iSteerSettings.add(jLabel14);
        jLabel14.setBounds(10, 50, 100, 20);

        jTxtField_Heading.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTxtField_Heading.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTxtField_Heading.setText("0");
        jTxtField_Heading.setToolTipText("");
        jTxtField_Heading.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtField_HeadingKeyTyped(evt);
            }
        });
        jPanel_iSteerSettings.add(jTxtField_Heading);
        jTxtField_Heading.setBounds(110, 50, 80, 28);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Max Speed");
        jLabel16.setToolTipText("");
        jLabel16.setVerifyInputWhenFocusTarget(false);
        jPanel_iSteerSettings.add(jLabel16);
        jLabel16.setBounds(10, 90, 100, 20);

        jTxtField_Speed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTxtField_Speed.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTxtField_Speed.setText("10");
        jTxtField_Speed.setToolTipText("");
        jTxtField_Speed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtField_SpeedKeyTyped(evt);
            }
        });
        jPanel_iSteerSettings.add(jTxtField_Speed);
        jTxtField_Speed.setBounds(110, 90, 80, 28);

        label2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label2.setName(""); // NOI18N
        label2.setText("o");
        jPanel_iSteerSettings.add(label2);
        label2.setBounds(200, 40, 30, 28);

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label3.setName(""); // NOI18N
        label3.setText("knots");
        jPanel_iSteerSettings.add(label3);
        label3.setBounds(260, 360, 47, 28);

        checkbox_TrueMag.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        checkbox_TrueMag.setLabel("Mag");
        checkbox_TrueMag.setName(""); // NOI18N
        jPanel_iSteerSettings.add(checkbox_TrueMag);
        checkbox_TrueMag.setBounds(230, 50, 80, 28);

        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jPanel_iSteerSettings.add(jSlider1);
        jSlider1.setBounds(270, 120, 40, 200);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("-");
        jLabel10.setToolTipText("");
        jPanel_iSteerSettings.add(jLabel10);
        jLabel10.setBounds(250, 330, 69, 29);

        label4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label4.setName(""); // NOI18N
        label4.setText("knots");
        jPanel_iSteerSettings.add(label4);
        label4.setBounds(200, 90, 47, 28);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("360");
        jLabel11.setToolTipText("");
        jPanel_iSteerSettings.add(jLabel11);
        jLabel11.setBounds(70, 330, 110, 29);

        jSlider2.setMaximum(359);
        jSlider2.setPaintTicks(true);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jPanel_iSteerSettings.add(jSlider2);
        jSlider2.setBounds(20, 290, 200, 41);

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_iSteerSettings.add(jButton1);
        jButton1.setBounds(100, 140, 97, 31);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Start Location");
        jPanel_iSteerSettings.add(jLabel7);
        jLabel7.setBounds(340, 50, 220, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("LAT");
        jLabel8.setToolTipText("");
        jPanel_iSteerSettings.add(jLabel8);
        jLabel8.setBounds(380, 90, 40, 22);

        jTextField_StartLat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_StartLat.setText("27.33.03");
        jTextField_StartLat.setToolTipText("");
        jPanel_iSteerSettings.add(jTextField_StartLat);
        jTextField_StartLat.setBounds(430, 90, 100, 28);

        checkbox_NorthSouth.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        checkbox_NorthSouth.setLabel("S");
        checkbox_NorthSouth.setName(""); // NOI18N
        checkbox_NorthSouth.setState(true);
        jPanel_iSteerSettings.add(checkbox_NorthSouth);
        checkbox_NorthSouth.setBounds(540, 90, 60, 28);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("LON");
        jPanel_iSteerSettings.add(jLabel9);
        jLabel9.setBounds(380, 140, 59, 22);

        jTextField_StartLon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_StartLon.setText("153.12.33");
        jTextField_StartLon.setToolTipText("");
        jPanel_iSteerSettings.add(jTextField_StartLon);
        jTextField_StartLon.setBounds(430, 140, 100, 28);

        checkbox_EastWest.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        checkbox_EastWest.setLabel("E");
        checkbox_EastWest.setName(""); // NOI18N
        checkbox_EastWest.setState(true);
        jPanel_iSteerSettings.add(checkbox_EastWest);
        checkbox_EastWest.setBounds(540, 140, 60, 28);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Satellites");
        jLabel5.setToolTipText("");
        jPanel_iSteerSettings.add(jLabel5);
        jLabel5.setBounds(340, 190, 190, 22);

        jTxtField_Accuracy.setText("5.0");
        jTxtField_Accuracy.setToolTipText("");
        jPanel_iSteerSettings.add(jTxtField_Accuracy);
        jTxtField_Accuracy.setBounds(460, 230, 60, 29);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Accuracy");
        jLabel12.setToolTipText("");
        jPanel_iSteerSettings.add(jLabel12);
        jLabel12.setBounds(360, 230, 100, 22);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("m");
        jLabel13.setToolTipText("");
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel_iSteerSettings.add(jLabel13);
        jLabel13.setBounds(530, 230, 69, 23);

        jPanel_Shortcuts.add(jPanel_iSteerSettings);
        jPanel_iSteerSettings.setBounds(10, 240, 640, 390);

        jPanel_SettingsTab.add(jPanel_Shortcuts);
        jPanel_Shortcuts.setBounds(610, 10, 660, 640);

        jButton_Clear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_Clear.setText("Clear");
        jButton_Clear.setToolTipText("");
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });
        jPanel_SettingsTab.add(jButton_Clear);
        jButton_Clear.setBounds(490, 610, 110, 30);

        jPanel_WiFlyCommand.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBtn_DataStop.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBtn_DataStop.setText("STOP");
        jBtn_DataStop.setToolTipText("");
        jBtn_DataStop.setEnabled(false);
        jBtn_DataStop.setFocusCycleRoot(true);
        jBtn_DataStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn_DataStop.setInheritsPopupMenu(true);
        jBtn_DataStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DataStopActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setName(""); // NOI18N
        label1.setText("NMEA DATA");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enter Command");

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setText("Press Enter to execute command");
        jLabel6.setToolTipText("");

        txtCommand.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        txtCommand.setName(""); // NOI18N
        txtCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommandActionPerformed(evt);
            }
        });

        jBtn_DataStart.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBtn_DataStart.setText("START");
        jBtn_DataStart.setToolTipText("");
        jBtn_DataStart.setEnabled(false);
        jBtn_DataStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DataStartActionPerformed(evt);
            }
        });

        jBtn_DataPause.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBtn_DataPause.setText("PAUSE");
        jBtn_DataPause.setToolTipText("");
        jBtn_DataPause.setEnabled(false);

        javax.swing.GroupLayout jPanel_WiFlyCommandLayout = new javax.swing.GroupLayout(jPanel_WiFlyCommand);
        jPanel_WiFlyCommand.setLayout(jPanel_WiFlyCommandLayout);
        jPanel_WiFlyCommandLayout.setHorizontalGroup(
            jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 457, Short.MAX_VALUE))
                    .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                        .addGroup(jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel_WiFlyCommandLayout.createSequentialGroup()
                                .addComponent(jBtn_DataStop, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jBtn_DataPause, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtn_DataStart, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addContainerGap())))
        );
        jPanel_WiFlyCommandLayout.setVerticalGroup(
            jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_WiFlyCommandLayout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_DataStart, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn_DataStop, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn_DataPause, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jPanel_WiFlyCommandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel_SettingsTab.add(jPanel_WiFlyCommand);
        jPanel_WiFlyCommand.setBounds(10, 330, 590, 260);

        jTabbedPanel_Settings.addTab("Main", new javax.swing.ImageIcon(getClass().getResource("/resources/orange gear icon.png")), jPanel_SettingsTab); // NOI18N

        jPanel_HelpTab.setLayout(null);

        jPanel2.setLayout(null);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("AP-WRC3iF IP Address Change Steps");
        jLabel27.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel2.add(jLabel27);
        jLabel27.setBounds(10, 17, 290, 17);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("Step 1. Join your PC or laptop to the AP-WRC3iF's WiFi network.\nStep 2. Click on the 'Connect' button to make a connection to the AP-WRC3iF. Observe that the green WiFi light on the AP-WRC3iF is on solid and is no longer flashing slowly.\nStep 3. Click on the 'Command Mode' button and observe the green WiFi light on the AP-WRC3iF is flashing quickly..\nStep 4. Click on the 'Write New Settings' button to write the new IP address to the AP-WRC3iF.\nStep 5. Click on the \"Disconnect' button to disconnect from the AP-WRC3iF. Observer that the green WiFi light on the AP-WRC3iF is flashing slowly once again.\nStep 6. Turn the AP-WRC3iF off and on again to make the new settings take effect.\n");
        jScrollPane4.setViewportView(jTextArea3);

        jPanel2.add(jScrollPane4);
        jScrollPane4.setBounds(10, 40, 570, 160);

        jPanel_HelpTab.add(jPanel2);
        jPanel2.setBounds(0, 0, 580, 190);

        jPanel1.setLayout(null);

        jLabel45.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel45.setText("Notes:");
        jPanel1.add(jLabel45);
        jLabel45.setBounds(10, 7, 230, 17);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("1. You will lose WiFi connection with the AP-WRC3iF when you make the changes and cycle the power off then on.\n\n2. This procedure is only necessary for Apple IOS10 users.");
        jScrollPane3.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 30, 570, 180);

        jPanel_HelpTab.add(jPanel1);
        jPanel1.setBounds(0, 200, 580, 270);

        jTabbedPanel_Settings.addTab("Help", new javax.swing.ImageIcon(getClass().getResource("/resources/help i icon.png")), jPanel_HelpTab); // NOI18N

        jPanel_MainWindow.add(jTabbedPanel_Settings);
        jTabbedPanel_Settings.setBounds(0, 140, 1280, 1220);

        jLabel_MadmanLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Madman Logo - Small Trans BG.png"))); // NOI18N
        jPanel_MainWindow.add(jLabel_MadmanLogo);
        jLabel_MadmanLogo.setBounds(1100, 20, 170, 140);

        jLabel_Version.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel_Version.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_Version.setText("Version 1.1");
        jLabel_Version.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_Version.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel_Version.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel_MainWindow.add(jLabel_Version);
        jLabel_Version.setBounds(1190, 10, 81, 15);

        jButton_Close.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_Close.setText("Close");
        jButton_Close.setToolTipText("Click to close this utility.");
        jButton_Close.setPreferredSize(new java.awt.Dimension(50, 25));
        jButton_Close.setRolloverEnabled(false);
        jButton_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CloseActionPerformed(evt);
            }
        });
        jPanel_MainWindow.add(jButton_Close);
        jButton_Close.setBounds(710, 30, 110, 30);

        jLabel_MadmanWebAddress.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_MadmanWebAddress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_MadmanWebAddress.setText("www.madmanmarine.com");
        jLabel_MadmanWebAddress.setToolTipText("");
        jLabel_MadmanWebAddress.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel_MadmanWebAddress.setInheritsPopupMenu(false);
        jPanel_MainWindow.add(jLabel_MadmanWebAddress);
        jLabel_MadmanWebAddress.setBounds(620, 110, 452, 29);

        jScrollPane1.setViewportView(jPanel_MainWindow);
        jPanel_MainWindow.getAccessibleContext().setAccessibleName("");

        this.pack();

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CloseActionPerformed
        communicator.disconnect();
        System.exit(0);
    }//GEN-LAST:event_jButton_CloseActionPerformed

    private void txtCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommandActionPerformed
        String command = txtCommand.getText();

        WriteCommand(command);
    }//GEN-LAST:event_txtCommandActionPerformed

    private void jBtn_DataStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DataStopActionPerformed
        //t.interrupt(); 
        t.suspend();
        startData = false;
        PassageStarted = false;
        jBtn_DataStart.setEnabled(true);
        jBtn_DataStop.setEnabled(false);
        jBtn_DataPause.setEnabled(false);
    }//GEN-LAST:event_jBtn_DataStopActionPerformed

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed
        txtLog.setText("");
    }//GEN-LAST:event_jButton_ClearActionPerformed

    private void jTxtField_SpeedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtField_SpeedKeyTyped

    }//GEN-LAST:event_jTxtField_SpeedKeyTyped

    private void jTxtField_HeadingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtField_HeadingKeyTyped
       
    }//GEN-LAST:event_jTxtField_HeadingKeyTyped

    private void jButton_DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DisconnectActionPerformed
        communicator.disconnect();
        jButton_Connect.setEnabled(true);
        jButton_Disconnect.setEnabled(false);
    }//GEN-LAST:event_jButton_DisconnectActionPerformed

    private void cboxBaudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxBaudActionPerformed

    }//GEN-LAST:event_cboxBaudActionPerformed

    private void jButton_ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConnectActionPerformed
        jBtn_DataStart.setEnabled(false);

        communicator.connect();

        if (communicator.getConnected() == true)
        {
            if (communicator.initIOStream() == true)
            {
                communicator.initListener();
            }
            jBtn_DataStart.setEnabled(true);
            jButton_Connect.setEnabled(false);
            jButton_Disconnect.setEnabled(true);
        } else {
            System.out.println("Failed to connect to serial device");
            jBtn_DataStart.setEnabled(false);
            txtLog.append("Failed to connect to serial device\r\n]");
        }
    }//GEN-LAST:event_jButton_ConnectActionPerformed

    private void jBtn_DataStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DataStartActionPerformed
        startData = true; 
        if (!PassageStarted) setStartLatLon();
        PassageStarted = true;

        if (t == null) {
            
            t = new Thread(new MessageLoop());
            t.start();
        } else {
            threadMessage("Resuming MessageLoop Thread");
            t.resume();
        }
        jBtn_DataStart.setEnabled(false);
        jBtn_DataStop.setEnabled(true);
        jBtn_DataPause.setEnabled(true);
    }//GEN-LAST:event_jBtn_DataStartActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        Integer SliderValue = jSlider1.getValue();
        globSpeed = SliderValue;
        jLabel10.setText(Double.toString(globSpeed));
        jTxtField_Speed.setText(jLabel10.getText());

    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        Integer SliderValue = (jSlider2.getValue());
        globHeading  = SliderValue; 
        if (globHeading <= 0)globHeading = 0;
        jLabel11.setText(Double.toString(globHeading)+ "\u00b0");
        jTxtField_Heading.setText(Double.toString(globHeading));
    }//GEN-LAST:event_jSlider2StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (!jTxtField_Speed.getText().isEmpty()){
                globSpeed = Integer.parseInt(jTxtField_Speed.getText());
                jLabel10.setText(Double.toString(globSpeed));
                jSlider1.setValue(globSpeed);
            }
        }
        catch (NumberFormatException e) {
            //Not an integer
       } 
         try {
            if (!jTxtField_Heading.getText().isEmpty()){
                globHeading = Integer.parseInt(jTxtField_Heading.getText());
                jSlider2.setValue(globHeading);
                jLabel11.setText(Double.toString(globHeading)+ "\u00b0");
            }
       }
        catch (NumberFormatException e) {
            //Not an integer
       } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void delay_ms(int millis) {
        try {
            Thread.sleep(millis);
        } catch (java.lang.InterruptedException ie) {
            //System.out.println(ie);
        }
    }
    
    static void threadMessage(String message) {
            String threadName = 
                    Thread.currentThread().getName();
            System.out.format("%s: %s%n", threadName, message);
        }
    private class MessageLoop implements Runnable {
        public void run(){
            threadMessage("Starting MessageLoop Thread");
            try {
                   while (startData){
                       calcLatLon();
                       makeRmcData();
                       makeGgaData();
                       makeGsaData();
                       Thread.sleep(1000);
                   }
            }
            catch (InterruptedException e){
                threadMessage("Ended MessageLoop Thread");
            }
        }
        
    }

    /**
     *
     *
     * @param args
     * @throws java.io.FileNotFoundException
     * @throws java.io.IOException@param args the command line arguments
     * @throws java.lang.InterruptedException
     */
    public static void main(String args[]) throws FileNotFoundException, IOException, InterruptedException {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
         
            new MainWindow().setVisible(true);
          
        });

    }
    public void calcLatLon(){
        globLat += .1;
        globLon += .1;
        globLatString = Double.toString(globLat * 100);
        globLatString = globLatString.substring(0, 8);
        globLonString = Double.toString(globLon * 100);
        globLonString = globLonString.substring(0, 8);
        if (globLon < 0) {
            globEW = "W";
        }
        else {
            globEW = "E";
        }
        if (globLat < 0) {
            globNS = "S";
        }
        else {
            globNS = "N";
        }
    }
    public void makeRmcData(){
        
//                   1         2 3       4  5       6 7   8   9   10  11 12
//                   |         | |       |  |       | |   |   |    |   | |
//            $--RMC,hhmmss.ss,A,llll.ll,a,yyyyy.yy,a,x.x,x.x,xxxx,x.x,a*hh
//             1) Time (UTC)
//             2) Status, V = Navigation receiver warning
//             3) Latitude
//             4) N or S
//             5) Longitude
//             6) E or W
//             7) Speed over ground, knots
//             8) Track made good, degrees true
//             9) Date, ddmmyy
//            10) Magnetic Variation, degrees
//            11) E or W
//            12) Checksum
        
        String currTime = makeTime();
        String nmeaData = ("$MMRMC," + currTime + ",A,"+ globLatString + "," + globNS + "," 
                + globLonString + "," + globEW + "," + globSpeed + "," + jTxtField_Heading.getText() + ",060417,11,E*");        
        //String nmeaData = ("$MMRMC,103005.11,A,27.33.03,S,153.12.33,E,7.7,45.0,060417,11,E*");
        //System.out.println(nmeaData);
        String nmeaCRC = makeCRC(nmeaData);
        nmeaData += nmeaCRC;
        txtLog.append(nmeaData);
        txtLog.append("\r\n");
        WriteCommand(nmeaData);
    }
    public void makeGgaData(){
//                      1         2      3 4        5 6 7  8   9   10 |  12 13  14   15
//                      |         |      | |        | | |  |   |   |  |  |  |   |    |
//              $--GGA,hhmmss.ss,llll.ll,a,yyyyy.yy,a,x,xx,x.x,x.x,M,x.x,M,x.x,xxxx*hh
//              1) Time (UTC)
//              2) Latitude
//              3) N or S (North or South)
//              4) Longitude
//              5) E or W (East or West)
//              6) GPS Quality Indicator,
//               0 - fix not available,
//               1 - GPS fix,
//               2 - Differential GPS fix
//              7) Number of satellites in view, 00 - 12
//              8) Horizontal Dilution of precision
//              9) Antenna Altitude above/below mean-sea-level (geoid)
//              10) Units of antenna altitude, meters
//              11) Geoidal separation, the difference between the WGS-84 earth ellipsoid and mean-sea-level (geoid), "-" means mean-sea-level below ellipsoid
//              12) Units of geoidal separation, meters
//              13) Age of differential GPS data, time in seconds since last SC104 type 1 or 9 update, null field when DGPS is not used
//              14) Differential reference station ID, 0000-1023
//              15) Checksum
        String currTime = makeTime();
        globAccuracy = Float.parseFloat(jTxtField_Accuracy.getText());
        String nmeaData = ("$MMGGA," + currTime + ","+ globLatString + "," + globNS + "," + globLonString + "," + globEW + ",1,11," + globAccuracy + ",2.35,M,-,M,,*"); //not finished!!!  
        String nmeaCRC = makeCRC(nmeaData);
        nmeaData += nmeaCRC;
        txtLog.append(nmeaData);
        txtLog.append("\r\n");
        WriteCommand(nmeaData);
    }
    public void makeGsaData(){
//                      1 2 3                        14 15  16  17  18
//                      | | |                         |  |   |   |   |
//              $--GSA,a,a,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x.x,x.x,x.x*hh<CR><LF>
//              1) Selection mode: M=Manual, forced to operate in 2D or 3D, A=Automatic, 3D/2D
//              2) Mode (1 = no fix, 2 = 2D fix, 3 = 3D fix)
//              3) ID of 1st satellite used for fix
//                        to...
//              14) ID of 12th satellite used for fix
//              15) PDOP
//              16) HDOP
//              17) VDOP
//              18) Checksum
        globAccuracy = Float.parseFloat(jTxtField_Accuracy.getText());
        String nmeaData = ("$MMGSA,A,3,04,05,,09,12,,,24,,,,," + globAccuracy + ",1.3,2.1*");
        String nmeaCRC = makeCRC(nmeaData);
        nmeaData += nmeaCRC;
        txtLog.append(nmeaData);
        txtLog.append("\r\n");
        WriteCommand(nmeaData);
    }
    
    public String makeCRC(String in){
        int checksum = 0;
        if (in.startsWith("$")) {
            in = in.substring(1, in.length());
        }

        int end = in.indexOf('*');
        if (end == -1)
            end = in.length();
        for (int i = 0; i < end; i++) {
            checksum = checksum ^ in.charAt(i);
        }
        String hex = Integer.toHexString(checksum);
        if (hex.length() == 1)
            hex = "0" + hex;
        return hex.toUpperCase();
    }
    
    public String makeTime(){
        String currtime;
        Calendar cal = Calendar.getInstance(); 
        cal.getTime(); 
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss"); 
        currtime = sdf.format(cal.getTime());
        currtime = currtime.replaceAll("[^0-9]","");
        currtime += ".000";
        return currtime; 
    }
    
    public void setStartLatLon(){
        //String latitude = "75°36'12.20\"W";
        String latitude = this.jTextField_StartLat.getText();
        if (checkbox_NorthSouth.getState()){
           latitude += "\"S";
           globNS = "S";
        }
        else
        {
           latitude += "\"N"; 
           globNS = "N";
        }
        globLat = LongitudeLatitudeParser.ParseLatLonValue(latitude);
        //System.out.println(globLat);
        String longitude = this.jTextField_StartLon.getText();
        if (checkbox_EastWest.getState()){
           longitude += "\"E";
           globEW = "E";
        }
        else
        {
           longitude += "\"W";
           globEW = "W";
        }
        globLon = LongitudeLatitudeParser.ParseLatLonValue(longitude);
        //System.out.println(globLon);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static final javax.swing.JComboBox<String> cboxBaud = new javax.swing.JComboBox<>();
    public javax.swing.JComboBox<String> cboxPorts;
    private java.awt.Checkbox checkbox_EastWest;
    private java.awt.Checkbox checkbox_NorthSouth;
    private java.awt.Checkbox checkbox_TrueMag;
    private javax.swing.JButton jBtn_DataPause;
    private javax.swing.JButton jBtn_DataStart;
    private javax.swing.JButton jBtn_DataStop;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Connect;
    private javax.swing.JButton jButton_Disconnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_MadmanLogo;
    private javax.swing.JLabel jLabel_MadmanWebAddress;
    private javax.swing.JLabel jLabel_Version;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel_Heading;
    private javax.swing.JPanel jPanel_HelpTab;
    private javax.swing.JPanel jPanel_MainWindow;
    private javax.swing.JPanel jPanel_SerialConnect;
    private javax.swing.JPanel jPanel_SettingsTab;
    private javax.swing.JPanel jPanel_Shortcuts;
    private javax.swing.JPanel jPanel_WiFlyCommand;
    private javax.swing.JPanel jPanel_iSteerSettings;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTabbedPane jTabbedPanel_Settings;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField_StartLat;
    private javax.swing.JTextField jTextField_StartLon;
    private javax.swing.JTextField jTxtField_Accuracy;
    public javax.swing.JTextField jTxtField_Heading;
    public javax.swing.JTextField jTxtField_Speed;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.TextArea textArea1;
    public java.awt.TextField txtCommand;
    public java.awt.TextArea txtLog;
    // End of variables declaration//GEN-END:variables

    
    
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Madman Icon2 32.png")));
    }
    
    private void WriteCommand(String message) {
        boolean DEBUG = true;
        message+= "\r\n";
        int msglen = message.length();
        byte[] array = message.getBytes();
        for (int i=0; i<msglen; i++){
            communicator.writeData(array[i]);
        }
    }

    @Override
    public void reportStatus(boolean result) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

    

